题目：基于分布式架构的即时通讯系统设计与实现



项目介绍：
前端基于QT实现气泡聊天对话框，支持添加好友，好友通信，聊天记录展示等功能。
仿微信实现聊天布局和qss优化，后端采用分布式设计，分为GateServer网关服务，
多个ChatServer分布式承载用户聊天连接，EmailServer用来验证和收发邮件，
各服务通过grpc通信，网关对外采用http服务，聊天服务采用asio实现tcp可靠长链接通信和转发。
用户数据通过msql存储并且基于mysqlconnector手动封装连接池，包括redis连接池，以及grpc连接池等。
基于boost asio实现异步通信，通过连接池管理连接。
单服务器支持8000连接，多服务器分布部署可支持1W~2W活跃用户。





选题基础：
在当前信息时代，社交和即时通讯应用成为人们日常生活中不可或缺的一部分。
即时通讯系统的高并发、低延迟需求对系统的设计与实现提出了较高的要求。
本项目旨在结合前端技术（如Qt）与后端分布式架构（如gRPC、Boost.Asio）
设计一个高效稳定的即时通讯系统。通过此项目，可以充分锻炼和提升我在分布式系统设计、
网络编程、前端开发等方面的专业技能。




研究内容：
前端设计：采用Qt实现气泡聊天对话框，支持添加好友、好友通信、聊天记录展示等功能，
仿微信的聊天布局，并通过QSS优化用户界面。
后端架构：系统采用分布式架构，后端服务包括GateServer（网关服务）、
多个ChatServer（分布式聊天服务）、EmailServer（邮件服务），各服务之间通过gRPC进行通信。
网关服务提供HTTP接口，对外开放；聊天服务则通过Boost.Asio实现TCP长连接通信和消息转发。
数据存储与管理：用户数据通过MySQL存储，并基于MySQLConnector手动封装连接池，
同时包括Redis连接池和gRPC连接池等。通过Boost.Asio实现异步通信和连接管理，确保系统在高并发下的稳定性。
性能优化：设计线程池、连接池、分布式gRPC通信，支持单服务器8000连接，
通过多服务器分布式部署可支持1万至2万活跃用户，满足高并发需求。
希望通过此项目，不仅能完成一个功能完善的即时通讯系统，还能深入理解和掌握分布式系统、
网络通信以及Qt前端开发的相关知识。